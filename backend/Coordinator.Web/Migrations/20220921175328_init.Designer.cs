// <auto-generated />
using System;
using Coordinator.Web.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;

#nullable disable

namespace Coordinator.Web.Migrations
{
    [DbContext(typeof(PgSqlDbContext))]
    [Migration("20220921175328_init")]
    partial class init
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.9")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Coordinator.Web.Data.Entities.FlowInstance", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<bool>("Completed")
                        .HasColumnType("boolean")
                        .HasColumnName("completed");

                    b.Property<DateTime?>("CompletedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("completed_at");

                    b.Property<DateTime>("CreatedAt")
                        .HasColumnType("timestamp")
                        .HasColumnName("created_at");

                    b.Property<long>("CurrentStepInstanceId")
                        .HasColumnType("bigint")
                        .HasColumnName("current_step_instance_id");

                    b.Property<long>("TemplateId")
                        .HasColumnType("bigint")
                        .HasColumnName("template_id");

                    b.HasKey("Id")
                        .HasName("pk_flow_instances");

                    b.HasIndex("CurrentStepInstanceId");

                    b.HasIndex("TemplateId");

                    b.ToTable("flow_instances", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.FlowTemplate", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Arcs")
                        .IsRequired()
                        .HasColumnType("jsonb")
                        .HasColumnName("arcs");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.HasKey("Id")
                        .HasName("pk_flow_templates");

                    b.ToTable("flow_templates", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.Step", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<int>("Flag")
                        .HasColumnType("int")
                        .HasColumnName("flag");

                    b.Property<int>("Index")
                        .HasColumnType("int")
                        .HasColumnName("index");

                    b.Property<int?>("MaxRetries")
                        .HasColumnType("int")
                        .HasColumnName("max_retries");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<int?>("Timeout")
                        .HasColumnType("int")
                        .HasColumnName("timeout");

                    b.Property<long>("WorkerId")
                        .HasColumnType("bigint")
                        .HasColumnName("worker_id");

                    b.HasKey("Id")
                        .HasName("pk_steps");

                    b.HasIndex("WorkerId");

                    b.HasIndex("Id", "Index")
                        .IsUnique()
                        .HasDatabaseName("ix_steps_id_index");

                    b.ToTable("steps", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.StepInstance", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Input")
                        .HasColumnType("jsonb")
                        .HasColumnName("input");

                    b.Property<string>("Output")
                        .HasColumnType("jsonb")
                        .HasColumnName("output");

                    b.Property<long>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.HasKey("Id")
                        .HasName("pk_step_instances");

                    b.HasIndex("StepId");

                    b.ToTable("step_instances", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.StepInTemplate", b =>
                {
                    b.Property<long>("TemplateId")
                        .HasColumnType("bigint")
                        .HasColumnName("template_id");

                    b.Property<long>("StepId")
                        .HasColumnType("bigint")
                        .HasColumnName("step_id");

                    b.HasKey("TemplateId", "StepId")
                        .HasName("pk_steps_in_templates");

                    b.HasIndex("StepId");

                    b.ToTable("steps_in_templates", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.Worker", b =>
                {
                    b.Property<long>("Id")
                        .HasColumnType("bigint")
                        .HasColumnName("id");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("varchar")
                        .HasColumnName("name");

                    b.Property<int>("Type")
                        .HasColumnType("int")
                        .HasColumnName("type");

                    b.HasKey("Id")
                        .HasName("pk_workers");

                    b.ToTable("workers", (string)null);
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.FlowInstance", b =>
                {
                    b.HasOne("Coordinator.Web.Data.Entities.StepInstance", "CurrentStep")
                        .WithMany("FlowInstances")
                        .HasForeignKey("CurrentStepInstanceId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coordinator.Web.Data.Entities.FlowTemplate", "Template")
                        .WithMany("Instances")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("CurrentStep");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.Step", b =>
                {
                    b.HasOne("Coordinator.Web.Data.Entities.Worker", "Worker")
                        .WithMany("Steps")
                        .HasForeignKey("WorkerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Worker");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.StepInstance", b =>
                {
                    b.HasOne("Coordinator.Web.Data.Entities.Step", "Step")
                        .WithMany("Instances")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.StepInTemplate", b =>
                {
                    b.HasOne("Coordinator.Web.Data.Entities.Step", "Step")
                        .WithMany("Templates")
                        .HasForeignKey("StepId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("Coordinator.Web.Data.Entities.FlowTemplate", "Template")
                        .WithMany("Steps")
                        .HasForeignKey("TemplateId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Step");

                    b.Navigation("Template");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.FlowTemplate", b =>
                {
                    b.Navigation("Instances");

                    b.Navigation("Steps");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.Step", b =>
                {
                    b.Navigation("Instances");

                    b.Navigation("Templates");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.StepInstance", b =>
                {
                    b.Navigation("FlowInstances");
                });

            modelBuilder.Entity("Coordinator.Web.Data.Entities.Worker", b =>
                {
                    b.Navigation("Steps");
                });
#pragma warning restore 612, 618
        }
    }
}
